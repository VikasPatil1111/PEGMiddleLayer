// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PEGMiddleLayer.Authentication;

namespace PEGMiddleLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PEGMiddleLayer.Authentication.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.CompanySelection.tblCompanyMaster", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Selection_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DB_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DB_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GST_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("MenuStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideBar_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SmallLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Theme_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyCode");

                    b.ToTable("TblCompanyMaster");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.CompanySelection.tblCompanyUsers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Allow")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Last_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_ID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TblCompanyUsers");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Backlog.vw_BacklogOrder_Tech_Spec_Summary", b =>
                {
                    b.Property<string>("CDD_Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CDD_Month_No")
                        .HasColumnType("int");

                    b.Property<int?>("CDD_Year")
                        .HasColumnType("int");

                    b.Property<string>("COrder_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filter_CDD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filter_PDD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Filter_Qty")
                        .HasColumnType("float");

                    b.Property<string>("Filter_Stages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Filter_Value")
                        .HasColumnType("float");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Minor_No")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Booking_Completed_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Order_Qty")
                        .HasColumnType("float");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Order_Value")
                        .HasColumnType("float");

                    b.Property<short?>("Order_Year")
                        .HasColumnType("smallint");

                    b.Property<string>("PDD_Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PDD_Month_No")
                        .HasColumnType("int");

                    b.Property<int?>("PDD_Year")
                        .HasColumnType("int");

                    b.Property<int?>("ProdGrpCd")
                        .HasColumnType("int");

                    b.Property<string>("ProdGrpNm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdGrp_MIS_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProdGrp_MIS_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Product_Code")
                        .HasColumnType("int");

                    b.ToTable("vw_BacklogOrder_Tech_Spec_Summary");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Backlog.vw_Backlog_Order_Rev1", b =>
                {
                    b.Property<string>("Action_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Action_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Backlog_Order_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Backlog_Order_Value")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Bom_Released_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bom_Released_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookingYear")
                        .HasColumnType("int");

                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CDD_Month_No")
                        .HasColumnType("int");

                    b.Property<string>("COrder_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Contract_Review_By_Ho_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Contract_Review_Done")
                        .HasColumnType("float");

                    b.Property<double?>("Conversion_Factor")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Costed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Costed_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costing_Fdbk_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costing_Fdbk_Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Customer_Po_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Po_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Po_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Customer_Rejction_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Customer_Rejction_Val")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Customer_Req_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("D_E_I")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dealer_NonDealer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Diff")
                        .HasColumnType("float");

                    b.Property<int?>("Diff_1")
                        .HasColumnType("int");

                    b.Property<int?>("Diff_Fg_Qty")
                        .HasColumnType("int");

                    b.Property<int?>("Diff_Fg_Val")
                        .HasColumnType("int");

                    b.Property<double?>("Discounted_Rate")
                        .HasColumnType("float");

                    b.Property<double?>("Dismantle_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Dismantle_Val")
                        .HasColumnType("float");

                    b.Property<string>("DrawingApprovalRecd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drawing_Required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ETL_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Elo_Order_Item_Serial_No")
                        .HasColumnType("int");

                    b.Property<double?>("FgQty")
                        .HasColumnType("float");

                    b.Property<double?>("FgQtyVal")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Qty_MtcIssue")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Qty_MtcNotIssue")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Val")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Val_MtcIssue")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Val_MtcNotIssue")
                        .HasColumnType("float");

                    b.Property<string>("Filter_CDD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filter_PDD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Filter_Qty")
                        .HasColumnType("float");

                    b.Property<string>("Filter_Stages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Filter_Value")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GADrg_Approval_Receipt_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GADrg_Send_To_Branch_Customer")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IV_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Indent_Genration_Date")
                        .HasColumnType("int");

                    b.Property<string>("Inspection_Reqd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Internal_QA_Appr_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Internal_QA_Appr_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Invoiced_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Invoiced_Val")
                        .HasColumnType("float");

                    b.Property<string>("LD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Lead_Time_In_Weeks")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Liquid_Damage_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MCH_Factory_Qty")
                        .HasColumnType("int");

                    b.Property<double?>("MCH_Factory_Val")
                        .HasColumnType("float");

                    b.Property<int?>("MCH_Sales_Qty")
                        .HasColumnType("int");

                    b.Property<double?>("MCH_Sales_Val")
                        .HasColumnType("float");

                    b.Property<int?>("MCH_Total_Qty")
                        .HasColumnType("int");

                    b.Property<double?>("MCH_Total_Val")
                        .HasColumnType("float");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Material_Receipt_Comp_Date")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Mfg_Costed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mfg_Costed_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Minor_No")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Mkt_Clarification_Receipt_Dt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Mkt_Other_Clr_Receipt_Dt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Mkt_QAP_Clr_Receipt_Dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mktg_Released_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Booking_Completed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Order_Exe_Start_Date")
                        .HasColumnType("int");

                    b.Property<short?>("Order_Qty")
                        .HasColumnType("smallint");

                    b.Property<double?>("Order_Qty_Clear_For_Prod")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_ForCstClrCMDApp")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_ForGAAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_ForQAPAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Bom_Release")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Cont_Review")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Cst_Clr")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_GAAcept_Eng")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_GA_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_IntQAP_App")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Mktg_Hold")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_QAP_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Tech_Clar")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Order_Reinitiate_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order_Serial_No")
                        .HasColumnType("int");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Order_Val_Clear_For_Prod")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_ForCstClrCMDApp")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_ForGAAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_ForQAPAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Bom_Release")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Cont_Review")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Cst_Clr")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_GAAcept_Eng")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_GA_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_IntQAP_App")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Mktg_Hold")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_QAP_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Tech_Clar")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Value")
                        .HasColumnType("float");

                    b.Property<short>("Order_Year")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Oth_Approval_Receipt_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PDD_Month_No")
                        .HasColumnType("int");

                    b.Property<double?>("Pending_For_Invoice_Val")
                        .HasColumnType("float");

                    b.Property<double?>("Pending_For_Prod_Qty")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Planning_Commit_Dt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Prod_Complition_Date")
                        .HasColumnType("int");

                    b.Property<double?>("Prod_NReady_For_Ship")
                        .HasColumnType("float");

                    b.Property<double?>("Prod_NReady_For_ShipVal")
                        .HasColumnType("float");

                    b.Property<int?>("Prod_Sch_Generation_Date")
                        .HasColumnType("int");

                    b.Property<short?>("Produced_Qty")
                        .HasColumnType("smallint");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int?>("Purchase_Order_Genration_Date")
                        .HasColumnType("int");

                    b.Property<string>("QAP_Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QAP_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Qap_Approval_Receipt_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int?>("Simulation_Date")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year_Month")
                        .HasColumnType("int");

                    b.ToTable("vw_Backlog_Order_Rev1");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Backlog.vw_Backlog_Order_Summary", b =>
                {
                    b.Property<double?>("Actuator")
                        .HasColumnType("float");

                    b.Property<double?>("ActuatorQty")
                        .HasColumnType("float");

                    b.Property<double?>("BallValve")
                        .HasColumnType("float");

                    b.Property<double?>("BallValveQty")
                        .HasColumnType("float");

                    b.Property<double?>("ButterFlyValve")
                        .HasColumnType("float");

                    b.Property<double?>("ButterFlyValveQty")
                        .HasColumnType("float");

                    b.Property<string>("CDD_Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CDD_Month_No")
                        .HasColumnType("int");

                    b.Property<int?>("CDD_Year")
                        .HasColumnType("int");

                    b.Property<string>("COrder_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filter_CDD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filter_PDD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filter_Stages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GGCValve")
                        .HasColumnType("float");

                    b.Property<double?>("GGCValveQty")
                        .HasColumnType("float");

                    b.Property<string>("PDD_Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PDD_Month_No")
                        .HasColumnType("int");

                    b.Property<int?>("PDD_Year")
                        .HasColumnType("int");

                    b.ToTable("vw_Backlog_Order_Summary");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Booking.BookingChartDelayAnalysis", b =>
                {
                    b.Property<double>("Actuator")
                        .HasColumnType("float");

                    b.Property<double>("BallValve")
                        .HasColumnType("float");

                    b.Property<double>("ButterFlyValve")
                        .HasColumnType("float");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GGCValve")
                        .HasColumnType("float");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Month_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("vw_BookingBarCharDelayAnalysis");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Booking.BookingCompanyBranches", b =>
                {
                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EIPL")
                        .HasColumnType("float");

                    b.Property<double>("IV")
                        .HasColumnType("float");

                    b.Property<double>("IVU2")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("vw_BookingBranchDetails");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Booking.BookingDealerNonDealer", b =>
                {
                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Dealer")
                        .HasColumnType("float");

                    b.Property<double>("Direct")
                        .HasColumnType("float");

                    b.Property<double>("Inter_Company")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("vw_BookingDealerNonDealer");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Booking.BookingTable", b =>
                {
                    b.Property<string>("Amendment_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cancelled_Abv_6Mth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dealer_NonDealer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domestic_Export")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Etl_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Minor_No")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Month_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Booking_Completed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Order_Value")
                        .HasColumnType("float");

                    b.Property<int?>("Order_Year")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Po_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Po_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int?>("Serial_No")
                        .HasColumnType("int");

                    b.Property<int?>("SrNo")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable("tblBI_MISOrderBooking_Dtl");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Booking.BookingTargetTable", b =>
                {
                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domestic_Export")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rc_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("SrNo")
                        .HasColumnType("smallint");

                    b.Property<double?>("Target")
                        .HasColumnType("float");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Year")
                        .HasColumnType("smallint");

                    b.ToTable("tblBI_OrderBooking_Target");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Booking.tblBooking_Tech_Dtl", b =>
                {
                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Minor_No")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Month_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Booking_Completed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Order_Value")
                        .HasColumnType("float");

                    b.Property<int?>("Order_Year")
                        .HasColumnType("int");

                    b.Property<int?>("ProdGrpCd")
                        .HasColumnType("int");

                    b.Property<string>("ProdGrpNm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdGrp_MIS_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProdGrp_MIS_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable("vw_Booking_Tech_Dtl");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.Common.tblBI_BFV_Order_TechDtl", b =>
                {
                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body_BondingMoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body_MatlDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body_MatlShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Booking_Month")
                        .HasColumnType("int");

                    b.Property<int?>("Booking_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Booking_Year_Month")
                        .HasColumnType("int");

                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COrder_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Companion_Flang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disc_MatlDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disc_MatlShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domestic_Export")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Etl_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlngStd_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ItemSrlNo")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Item_Serial_No")
                        .HasColumnType("int");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mfg_Trading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Minor_No")
                        .HasColumnType("tinyint");

                    b.Property<string>("OperatorGrpNm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order_Serial_No")
                        .HasColumnType("int");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Order_Year")
                        .HasColumnType("smallint");

                    b.Property<short?>("ProdGrpCd")
                        .HasColumnType("smallint");

                    b.Property<string>("ProdGrpNm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seat_MatlShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shaft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shaft_MatlShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spare_Kit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier_Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("tblBI_BFV_Order_TechDtl");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.MISReport.USP_BIRepo_PEG_MIS_SS", b =>
                {
                    b.Property<double?>("EIPL_MTD")
                        .HasColumnType("float");

                    b.Property<double?>("EIPL_YTD")
                        .HasColumnType("float");

                    b.Property<double?>("IVPLU1_MTD")
                        .HasColumnType("float");

                    b.Property<double?>("IVPLU1_YTD")
                        .HasColumnType("float");

                    b.Property<double?>("IVPLU2_MTD")
                        .HasColumnType("float");

                    b.Property<double?>("IVPLU2_YTD")
                        .HasColumnType("float");

                    b.Property<double?>("IVPL_MTD")
                        .HasColumnType("float");

                    b.Property<double?>("IVPL_YTD")
                        .HasColumnType("float");

                    b.Property<double?>("PEG_MTD")
                        .HasColumnType("float");

                    b.Property<double?>("PEG_YTD")
                        .HasColumnType("float");

                    b.Property<string>("Repo_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SrNo")
                        .HasColumnType("int");

                    b.ToTable("USP_BIRepo_PEG_MIS_SS");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.PendingOrder", b =>
                {
                    b.Property<string>("IV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Action_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Backlog_Order_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Backlog_Order_Value")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Bom_Released_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bom_Released_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookingYear")
                        .HasColumnType("int");

                    b.Property<string>("Branch_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COrder_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Contract_Review_By_Ho_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Contract_Review_Done")
                        .HasColumnType("float");

                    b.Property<double?>("Conversion_Factor")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Costed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Costed_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costing_Fdbk_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costing_Fdbk_Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Customer_Po_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Po_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Po_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Customer_Rejction_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Customer_Rejction_Val")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Customer_Req_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("D_E_I")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dealer_NonDealer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Diff")
                        .HasColumnType("float");

                    b.Property<int?>("Diff_1")
                        .HasColumnType("int");

                    b.Property<int?>("Diff_Fg_Qty")
                        .HasColumnType("int");

                    b.Property<int?>("Diff_Fg_Val")
                        .HasColumnType("int");

                    b.Property<double?>("Discounted_Rate")
                        .HasColumnType("float");

                    b.Property<double?>("Dismantle_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Dismantle_Val")
                        .HasColumnType("float");

                    b.Property<string>("DrawingApprovalRecd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drawing_Required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ETL_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Elo_Order_Item_Serial_No")
                        .HasColumnType("int");

                    b.Property<double?>("FgQty")
                        .HasColumnType("float");

                    b.Property<double?>("FgQtyVal")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Qty_MtcIssue")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Qty_MtcNotIssue")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Val")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Val_MtcIssue")
                        .HasColumnType("float");

                    b.Property<double?>("Fg_Val_MtcNotIssue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GADrg_Approval_Receipt_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GADrg_Send_To_Branch_Customer")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IV_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Indent_Genration_Date")
                        .HasColumnType("int");

                    b.Property<string>("Inspection_Reqd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Internal_QA_Appr_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Internal_QA_Appr_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Invoiced_Qty")
                        .HasColumnType("float");

                    b.Property<double?>("Invoiced_Val")
                        .HasColumnType("float");

                    b.Property<string>("LD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Lead_Time_In_Weeks")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Liquid_Damage_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MCH_Factory_Qty")
                        .HasColumnType("int");

                    b.Property<double?>("MCH_Factory_Val")
                        .HasColumnType("float");

                    b.Property<int?>("MCH_Sales_Qty")
                        .HasColumnType("int");

                    b.Property<double?>("MCH_Sales_Val")
                        .HasColumnType("float");

                    b.Property<int?>("MCH_Total_Qty")
                        .HasColumnType("int");

                    b.Property<double?>("MCH_Total_Val")
                        .HasColumnType("float");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Material_Receipt_Comp_Date")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Mfg_Costed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mfg_Costed_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Minor_No")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Mkt_Clarification_Receipt_Dt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Mkt_Other_Clr_Receipt_Dt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Mkt_QAP_Clr_Receipt_Dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mktg_Released_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Booking_Completed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Order_Exe_Start_Date")
                        .HasColumnType("int");

                    b.Property<short?>("Order_Qty")
                        .HasColumnType("smallint");

                    b.Property<double?>("Order_Qty_Clear_For_Prod")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_ForCstClrCMDApp")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_ForGAAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_ForQAPAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Bom_Release")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Cont_Review")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Cst_Clr")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_GAAcept_Eng")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_GA_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_IntQAP_App")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Mktg_Hold")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_QAP_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Qty_Pend_For_Tech_Clar")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Order_Reinitiate_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order_Serial_No")
                        .HasColumnType("int");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Order_Val_Clear_For_Prod")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_ForCstClrCMDApp")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_ForGAAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_ForQAPAppFrCust")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Bom_Release")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Cont_Review")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Cst_Clr")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_GAAcept_Eng")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_GA_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_IntQAP_App")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Mktg_Hold")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_QAP_Prep")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Val_Pend_For_Tech_Clar")
                        .HasColumnType("float");

                    b.Property<double?>("Order_Value")
                        .HasColumnType("float");

                    b.Property<short>("Order_Year")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Oth_Approval_Receipt_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Pending_For_Invoice_Val")
                        .HasColumnType("float");

                    b.Property<double?>("Pending_For_Prod_Qty")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Planning_Commit_Dt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Prod_Complition_Date")
                        .HasColumnType("int");

                    b.Property<double?>("Prod_NReady_For_Ship")
                        .HasColumnType("float");

                    b.Property<double?>("Prod_NReady_For_ShipVal")
                        .HasColumnType("float");

                    b.Property<int?>("Prod_Sch_Generation_Date")
                        .HasColumnType("int");

                    b.Property<short?>("Produced_Qty")
                        .HasColumnType("smallint");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int?>("Purchase_Order_Genration_Date")
                        .HasColumnType("int");

                    b.Property<string>("QAP_Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QAP_Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Qap_Approval_Receipt_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int?>("Simulation_Date")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year_Month")
                        .HasColumnType("int");

                    b.HasKey("IV");

                    b.ToTable("tblBI_Order_Status_Dtl");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.PendingOrderDetailsBarChart", b =>
                {
                    b.Property<double>("Actuator")
                        .HasColumnType("float");

                    b.Property<double>("BallValve")
                        .HasColumnType("float");

                    b.Property<double>("ButterFlyValve")
                        .HasColumnType("float");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GGCValve")
                        .HasColumnType("float");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("vw_PendingOrderBarSummary");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.PendingOrderQtyDetailsBarChart", b =>
                {
                    b.Property<double>("Actuator")
                        .HasColumnType("float");

                    b.Property<double>("BallValve")
                        .HasColumnType("float");

                    b.Property<double>("ButterFlyValve")
                        .HasColumnType("float");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GGCValve")
                        .HasColumnType("float");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("vw_PendingOrderBarQtySummary");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.PendingOrder_Tech_Dtl", b =>
                {
                    b.Property<string>("COrder_Serial_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Minor_No")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Order_Booking_Completed_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Order_Qty")
                        .HasColumnType("float");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Order_Value")
                        .HasColumnType("float");

                    b.Property<short?>("Order_Year")
                        .HasColumnType("smallint");

                    b.Property<int?>("ProdGrpCd")
                        .HasColumnType("int");

                    b.Property<string>("ProdGrpNm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdGrp_MIS_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProdGrp_MIS_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Product_Code")
                        .HasColumnType("int");

                    b.ToTable("vw_PendingOrder_Tech_Dtl");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Dashboard.ProductWisePendingOrder", b =>
                {
                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<double>("OrderQty")
                        .HasColumnType("float");

                    b.Property<double>("OrderValue")
                        .HasColumnType("float");

                    b.HasKey("Product");

                    b.ToTable("vw_ProductWisePendingOrderSummary");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Child", b =>
                {
                    b.Property<string>("Child_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parent_Menu_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Child_Id");

                    b.HasIndex("Parent_Menu_ID");

                    b.ToTable("tblMainMenu_Child");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Sub_Child", b =>
                {
                    b.Property<string>("Sub_Child_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Child_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Last_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Sub_Child_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sub_Child_ID");

                    b.HasIndex("Child_ID");

                    b.ToTable("tblMainMenu_Sub_Child1");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Sub_Child2", b =>
                {
                    b.Property<string>("Sub_Child_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Last_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Sub_Child_ID1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sub_Child_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sub_Child_ID");

                    b.HasIndex("Sub_Child_ID1");

                    b.ToTable("tblMainMenu_Sub_Child2");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.tblMainMenu", b =>
                {
                    b.Property<string>("Parent_Menu_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Last_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parent_Menu_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sr_No")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Parent_Menu_ID");

                    b.ToTable("tblMainMenu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PEGMiddleLayer.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PEGMiddleLayer.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEGMiddleLayer.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PEGMiddleLayer.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Child", b =>
                {
                    b.HasOne("PEGMiddleLayer.Models.Menu.tblMainMenu", null)
                        .WithMany("childrens")
                        .HasForeignKey("Parent_Menu_ID");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Sub_Child", b =>
                {
                    b.HasOne("PEGMiddleLayer.Models.Menu.MainMenu_Child", null)
                        .WithMany("childrens")
                        .HasForeignKey("Child_ID");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Sub_Child2", b =>
                {
                    b.HasOne("PEGMiddleLayer.Models.Menu.MainMenu_Sub_Child", null)
                        .WithMany("childrens")
                        .HasForeignKey("Sub_Child_ID1");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Child", b =>
                {
                    b.Navigation("childrens");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.MainMenu_Sub_Child", b =>
                {
                    b.Navigation("childrens");
                });

            modelBuilder.Entity("PEGMiddleLayer.Models.Menu.tblMainMenu", b =>
                {
                    b.Navigation("childrens");
                });
#pragma warning restore 612, 618
        }
    }
}
